<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>