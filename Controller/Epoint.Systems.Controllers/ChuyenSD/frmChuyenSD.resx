<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btYear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iKu/CgAAAABJRU5ErkJggg==
</value>
  </data>
</root>